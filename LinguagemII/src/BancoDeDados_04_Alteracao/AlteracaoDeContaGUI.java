
package BancoDeDados_04_Alteracao;

//Importação de classes
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AlteracaoDeContaGUI extends javax.swing.JFrame {

    /**
     * Creates new form AlteracaoDeContaGUI
     */
    public AlteracaoDeContaGUI() {
        initComponents();
        
        //Abrir o formulário centralizado na horizontal e vertical
        this.setLocationRelativeTo(null);
        
        BloquearCampos();
    }
    
    private void BloquearCampos()
    {
        txtId.setEnabled(true);
        txtNumero.setEnabled(false);
        txtSaldo.setEnabled(false);
        txtLimite.setEnabled(false);
        
        btnLimpar.setEnabled(false);
        btnAlterar.setEnabled(false);
    }
    
    private void DesbloquearCampos()
    {
        txtId.setEnabled(false);
        txtNumero.setEnabled(true);
        txtSaldo.setEnabled(true);
        txtLimite.setEnabled(true);
                
        btnLimpar.setEnabled(true);
        btnAlterar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblSaldo = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        lblLimite = new javax.swing.JLabel();
        txtLimite = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema IFBA");

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTitulo.setText("Alteração de Conta");

        lblNumero.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNumero.setText("Número:");

        txtNumero.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        lblSaldo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSaldo.setText("Saldo:");

        txtSaldo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSaldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaldoKeyTyped(evt);
            }
        });

        lblLimite.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLimite.setText("Limite:");

        txtLimite.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtLimite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLimiteKeyTyped(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblId.setText("Id:");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumero)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaldo)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLimite)
                    .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnLimpar))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped

        PermitirDigitarSomenteNumeros(evt);

    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtSaldoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaldoKeyTyped

        PermitirDigitarSomenteNumerosEVirgula(evt);

    }//GEN-LAST:event_txtSaldoKeyTyped

    private void txtLimiteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLimiteKeyTyped

        PermitirDigitarSomenteNumerosEVirgula(evt);

    }//GEN-LAST:event_txtLimiteKeyTyped

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed

        LimparCampos();
        BloquearCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void PermitirDigitarSomenteNumeros(java.awt.event.KeyEvent evt)
    {
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }
    
    private void PermitirDigitarSomenteNumerosEVirgula(java.awt.event.KeyEvent evt)
    {
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c) && c != ',')
        {
            evt.consume();
        }
    }
    
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed

        //Lê o Id digitado no campo de texto e armazena em uma variável (String)
        String strId = txtId.getText();

        //Converte a String capturada anteriormente para int a armazena em uma variável (int)
        int id = Integer.parseInt(strId);
        
        
        //Lê o número digitado no campo de texto e armazena em uma variável (String)
        String strNumero = txtNumero.getText();

        //Converte a String capturada anteriormente para int a armazena em uma variável (int)
        int numero = Integer.parseInt(strNumero);
        

        //Lê o saldo digitado no campo de texto e armazena em uma variável (String)
        String strSaldo = txtSaldo.getText();

        //Substitui, dentro da String, vírgula por ponto
        strSaldo = strSaldo.replace(',', '.');

        //Converte a String capturada anteriormente para double a armazena em uma variável (double)
        double saldo = Double.parseDouble(strSaldo);
        

        //Lê o limite digitado no campo de texto e armazena em uma variável (String)
        String strLimite = txtLimite.getText();

        //Substitui, dentro da String, vírgula por ponto
        strLimite = strLimite.replace(',', '.');

        //Converte a String capturada anteriormente para double a armazena em uma variável (double)
        double limite = Double.parseDouble(strLimite);
        

        //Cria um objeto gerenciador de conexao com o banco de dados
        GerenciadorBD bd = new GerenciadorBD();

        //realiza conexão com o banco de dados
        Connection conexao = bd.Conectar();

        //Tenta executar o conjunto de instruções abaixo
        try
        {
            //sql a ser executado no banco de dados
            String sql = "UPDATE conta SET numero = ?, saldo = ?, limite = ? WHERE id = ?";

            //cria o comando a ser executado no banco de dados
            PreparedStatement comando = conexao.prepareStatement(sql);

            //Combina os valores lidos do teclado com o sql acima
            comando.setInt(1, numero);
            comando.setDouble(2, saldo);
            comando.setDouble(3, limite);
            comando.setInt(4, id);

            //executa o comando no banco de dados
            comando.executeUpdate();

            //Exibe mensagem de sucesso.
            JOptionPane.showMessageDialog(this, "Conta alterada com sucesso!");
            
            LimparCampos();
            
            BloquearCampos();
        }
        //Captura e trata uma exceção de SQL
        catch (SQLException ex)
        {
            //Exibe mensagem de exceção
            JOptionPane.showMessageDialog(this, "Nao conseguiu alterar uma conta! \nErro: " + ex.getMessage());
        }
        //Executa independentemente de ocorrer exceção
        finally
        {
            //Desconecta do banco de dados
            bd.Desconectar();
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void LimparCampos()
    {
        txtId.setText("");
        txtNumero.setText("");
        txtSaldo.setText("");
        txtLimite.setText("");
    }
    
    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        
        PermitirDigitarSomenteNumeros(evt);
        
    }//GEN-LAST:event_txtIdKeyTyped

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        //Se a tecla digitada for igual a tecla ENTER, faça:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            //Faz chamada a um método
            ConsultarConta();
        }
    }//GEN-LAST:event_txtIdKeyPressed

    private void ConsultarConta()
    {
        String strId = txtId.getText();
        
        if(!strId.isEmpty()){
        
        int id = Integer.parseInt(strId);
        
        //Cria um gerenciador de conexao
        GerenciadorBD bd = new GerenciadorBD();
        
        //realiza conexão com o banco de dados
        Connection conexao = bd.Conectar();
    
        try 
        { 
            //sql a ser executado no banco de dados
            String sql = "SELECT numero, saldo, limite FROM conta WHERE id = ?";

            //cria o comando a ser executado no banco de dados
            //Statement comando = conexao.createStatement();
            PreparedStatement comando = conexao.prepareStatement(sql);
            
            //Combina os valores lidos do teclado com o sql acima
            comando.setInt(1, id);

            
            //executa o comando no banco de dados e armazena a resposta na memória 
            ResultSet resultado = comando.executeQuery();
            
            //Criando um objeto do tipo DefaultTableModel a partir da JTable tblContas 
            //DefaultTableModel tabelaContas = (DefaultTableModel) tblContas.getModel();
        
            int quantidadeDeLinhasDaConsulta = 0;
            
            //percorre os dados armazenados na memória e apresentam na tela
            while(resultado.next()) {
                    String strNumero = String.valueOf(resultado.getInt("numero"));
                    txtNumero.setText(strNumero);
                    
                    String strSaldo = String.valueOf(resultado.getInt("saldo"));
                    txtSaldo.setText(strSaldo);
                    
                    String strLimite = String.valueOf(resultado.getInt("limite"));
                    txtLimite.setText(strLimite);
                    
                    quantidadeDeLinhasDaConsulta++;
            }
            
            if(quantidadeDeLinhasDaConsulta > 0)
            {
                DesbloquearCampos();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Conta nao encontrada");
            }
        }
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, "Nao conseguiu consultar os dados das contas.");
        } 
        finally 
        {
            //Desconecta o banco de dados
            bd.Desconectar();
        }
        
        }
        else
        {
            JOptionPane.showMessageDialog(this, "O id é campo obrigatório.");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlteracaoDeContaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlteracaoDeContaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlteracaoDeContaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlteracaoDeContaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlteracaoDeContaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLimite;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLimite;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
